# Assignment-4-part-list-
1. Write a program that accepts a list from user and print the alternate element of list.
In [4]:
# Taking input from the user
user_input = input("Enter the elements of the list separated by spaces: ")

# Converting the input string to a list of elements
user_list = user_input.split()

# Printing the alternate elements of the list
print("Alternate elements of the list are:", user_list[::2])
Enter the elements of the list separated by spaces:  1234
Alternate elements of the list are: ['1234']
2. Write a program that accepts a list from user. Your program should reverse the content of list and display it. Do not use reverse() method.
In [13]:
# Taking input from the user
user_input = input("Enter the elements of the list separated by spaces: ")

# Converting the input string to a list of elements
user_list = user_input.split()

# Reversing the list using slicing
reversed_list = user_list[::-1]

# Displaying the reversed list
print("The reversed list is:", reversed_list)
Enter the elements of the list separated by spaces:  123456789
The reversed list is: ['123456789']
3. Find and display the largest number of a list without using built-in function max(). Your program should ask the user to input values in list from keyboard.
In [16]:
# Taking input from the user
user_input = input("Enter the numbers in the list separated by spaces: ")

# Converting the input string to a list of numbers
number_list = [float(x) for x in user_input.split()]

# Finding the largest number without using the max() function
largest_number = number_list[0]
for number in number_list:
    if number > largest_number:
        largest_number = number

# Displaying the largest number
print(f"The largest number in the list is: {largest_number}")
Enter the numbers in the list separated by spaces:  2343
The largest number in the list is: 2343.0
4. Write a program that rotates the element of a list so that the element at the first index moves to the second index, the element in the second index moves to the third index, etc., and the element in the last index moves to the first index.
In [21]:
### Taking input from the user
user_input = input("Enter the elements of the list separated by spaces: ")

# Converting the input string to a list of elements
user_list = user_input.split()

# Rotating the list elements
rotated_list = user_list[-1:] + user_list[:-1]

# Displaying the rotated list
print("The rotated list is:", rotated_list)
Enter the elements of the list separated by spaces:  432
The rotated list is: ['432']
5. Write a program that input a string and ask user to delete a given word from a string.
In [24]:
# Taking input from the user
input_string = input("Enter a string: ")
word_to_delete = input("Enter the word to delete: ")

# Deleting the given word from the string
result_string = input_string.replace(word_to_delete, '')

# Displaying the result
print("The string after deleting the word is:", result_string)
Enter a string:  happy birhtday
Enter the word to delete:  t
The string after deleting the word is: happy birhday
6. Write a program that reads a string from the user containing a date in the form mm/dd/yyyy. It should print the date in the form March 12, 2021.
In [27]:
# Dictionary to map month numbers to month names
month_names = {
    '01': 'January', '02': 'February', '03': 'March', '04': 'April',
    '05': 'May', '06': 'June', '07': 'July', '08': 'August',
    '09': 'September', '10': 'October', '11': 'November', '12': 'December'
}

# Taking input from the user
date_string = input("Enter a date in the form mm/dd/yyyy: ")

# Splitting the input string into month, day, and year
month, day, year = date_string.split('/')

# Converting the month number to month name
month_name = month_names[month]

# Formatting the date in the required form
formatted_date = f"{month_name} {int(day)}, {year}"

# Displaying the result
print("The formatted date is:", formatted_date)
Enter a date in the form mm/dd/yyyy:  12/2/2023
The formatted date is: December 2, 2023
7. Write a program with a function that accepts a string from keyboard and create a new string after converting character of each word capitalized. For instance, if the sentence is "stop and smell the roses." the output should be "Stop And Smell The Roses"
In [30]:
def capitalize_words(input_string):
    # Splitting the string into words
    words = input_string.split()
    # Capitalizing the first letter of each word
    capitalized_words = [word.capitalize() for word in words]
    # Joining the words back into a single string
    capitalized_string = ' '.join(capitalized_words)
    return capitalized_string

# Taking input from the user
input_string = input("Enter a sentence: ")

# Using the function to capitalize each word
result = capitalize_words(input_string)

# Displaying the result
print("The capitalized sentence is:", result)
Enter a sentence:  my name is ali
The capitalized sentence is: My Name Is Ali
8. Find the sum of each row of matrix of size m x n. For example for the following matrix output will be
like this :

Sum of row 1 = 32 Sum of row 2 = 31 Sum of row 3 = 63

In [36]:
def sum_of_rows(matrix):
    row_sums = []
    for row in matrix:
        row_sum = sum(row)
        row_sums.append(row_sum)
    return row_sums

# Example matrix
matrix = [
    [8, 11, 7, 6],
    [10, 12, 6, 3],
    [20, 15, 17, 11]
]

# Calculating the sum of each row
row_sums = sum_of_rows(matrix)

# Displaying the results
for i, row_sum in enumerate(row_sums):
    print(f"Sum of row {i + 1} = {row_sum}")
Sum of row 1 = 32
Sum of row 2 = 31
Sum of row 3 = 63
##

Write a program to add two matrices of size n x m.
In [39]:
def add_matrices(matrix1, matrix2):
    result_matrix = []
    for i in range(len(matrix1)):
        row = []
        for j in range(len(matrix1[0])):
            row.append(matrix1[i][j] + matrix2[i][j])
        result_matrix.append(row)
    return result_matrix

# Example matrices
matrix1 = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
]

matrix2 = [
    [9, 8, 7],
    [6, 5, 4],
    [3, 2, 1]
]

# Adding the matrices
result_matrix = add_matrices(matrix1, matrix2)

# Displaying the result
print("The resultant matrix is:")
for row in result_matrix:
    print(row)
The resultant matrix is:
[10, 10, 10]
[10, 10, 10]
[10, 10, 10]
10. Write a program to multiply two matrices
In [42]:
def multiply_matrices(matrix1, matrix2):
    # Number of rows and columns
    rows_matrix1 = len(matrix1)
    cols_matrix1 = len(matrix1[0])
    cols_matrix2 = len(matrix2[0])

    # Initializing the result matrix with zeros
    result_matrix = [[0 for _ in range(cols_matrix2)] for _ in range(rows_matrix1)]

    # Multiplying the matrices
    for i in range(rows_matrix1):
        for j in range(cols_matrix2):
            for k in range(cols_matrix1):
                result_matrix[i][j] += matrix1[i][k] * matrix2[k][j]

    return result_matrix

# Example
In [ ]:
